[debug] [2020-04-16T07:21:23.171Z] ----------------------------------------------------------------------
[debug] [2020-04-16T07:21:23.176Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\KAMOTHO\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2020-04-16T07:21:23.176Z] CLI Version:   7.13.1
[debug] [2020-04-16T07:21:23.176Z] Platform:      win32
[debug] [2020-04-16T07:21:23.176Z] Node Version:  v10.16.3
[debug] [2020-04-16T07:21:23.179Z] Time:          Thu Apr 16 2020 10:21:23 GMT+0300 (East Africa Time)
[debug] [2020-04-16T07:21:23.179Z] ----------------------------------------------------------------------
[debug] [2020-04-16T07:21:23.179Z] 
[debug] [2020-04-16T07:21:23.189Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-04-16T07:21:23.189Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\KAMOTHO\Desktop\Travel line

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2020-04-16T07:23:10.400Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?pageSize=100  
 
[debug] [2020-04-16T07:23:11.909Z] <<< HTTP RESPONSE 200
[info] i  Using project travel-line (Travel line)
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[info] Skipping overwrite of Database Rules.
[info] The rules defined in database.rules.json will be published when you do firebase deploy.
[info] 
=== Firestore Setup
[debug] [2020-04-16T07:23:33.950Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-04-16T07:23:33.950Z] > authorizing via signed-in user
[debug] [2020-04-16T07:23:33.950Z] [iam] checking project travel-line for permissions ["firebase.projects.get"]
[debug] [2020-04-16T07:23:33.952Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/travel-line:testIamPermissions  

[debug] [2020-04-16T07:23:36.122Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-04-16T07:23:38.627Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/travel-line/releases?pageSize=10&pageToken=  
 
[debug] [2020-04-16T07:23:40.162Z] <<< HTTP RESPONSE 200
[debug] [2020-04-16T07:23:40.162Z] Found ruleset: projects/travel-line/rulesets/9dde8da8-b61b-49ca-aca3-d2492162cadd
[debug] [2020-04-16T07:23:40.162Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/travel-line/rulesets/9dde8da8-b61b-49ca-aca3-d2492162cadd  
 
[debug] [2020-04-16T07:23:40.670Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2020-04-16T07:23:43.860Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/travel-line/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2020-04-16T07:23:43.860Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/travel-line/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2020-04-16T07:23:45.427Z] <<< HTTP RESPONSE 200
[debug] [2020-04-16T07:23:45.957Z] <<< HTTP RESPONSE 200
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2020-04-16T07:23:45.972Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-04-16T07:23:45.972Z] > authorizing via signed-in user
[debug] [2020-04-16T07:23:45.972Z] [iam] checking project travel-line for permissions ["firebase.projects.get"]
[debug] [2020-04-16T07:23:45.972Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/travel-line:testIamPermissions  

[debug] [2020-04-16T07:23:47.815Z] <<< HTTP RESPONSE 200
[debug] [2020-04-16T07:23:47.817Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/travel-line/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2020-04-16T07:23:47.817Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/travel-line/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2020-04-16T07:23:50.354Z] <<< HTTP RESPONSE 200
[debug] [2020-04-16T07:23:50.409Z] <<< HTTP RESPONSE 200
[info] +  Wrote functions/package.json
[info] +  Wrote functions/.eslintrc.json
[info] +  Wrote functions/index.js
[info] +  Wrote functions/.gitignore
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
[debug] [2020-04-16T07:28:30.474Z] >>> HTTP REQUEST GET https://www.gstatic.com/firebasejs/releases.json  
 
[debug] [2020-04-16T07:28:31.076Z] <<< HTTP RESPONSE 200
[info] +  Wrote public/index.html
[info] 
=== Storage Setup
[info] 
[info] Firebase Storage Security Rules allow you to define how and when to allow
[info] uploads and downloads. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[info] 
=== Emulators Setup
[info] i  firestore: downloading cloud-firestore-emulator-v1.10.4.jar...
[debug] [2020-04-16T07:30:00.575Z] Error: kill ENOSYS
    at process.kill (internal/process/per_thread.js:198:13)
    at process.listener (C:\Users\KAMOTHO\AppData\Roaming\npm\node_modules\firebase-tools\node_modules\signal-exit\index.js:95:15)
    at process.emit (events.js:198:13)
[error] 
[error] Error: An unexpected error has occurred.
